{"version":3,"file":"static/js/38.c55a1abf.chunk.js","mappings":"0NAEaA,EAAaC,EAAAA,GAAAA,KAAH,gGAMVC,EAAOD,EAAAA,GAAAA,EAAH,wFAMJE,EAAQF,EAAAA,GAAAA,MAAH,yCAILG,EAAQH,EAAAA,GAAAA,MAAH,uCAILI,EAAaJ,EAAAA,GAAAA,OAAH,4pB,0DCdhB,SAASK,IACd,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA2BF,EAAAA,EAAAA,UAAS,IAApC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAE7BC,QAAQC,IAAIJ,GAEZ,IAGMK,EAAe,SAAAC,GACnB,MAAwBA,EAAIC,OAApBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MACD,SAATd,GACFC,EAAQa,GAEG,UAATd,GACFG,EAAUW,EAEb,EAcKC,EAAQ,WACZd,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAACX,EAAD,CAAYwB,SAlBO,SAAAJ,GACnB,IAAMK,EAAU,CAAEjB,KAAAA,EAAME,MAAAA,GAExB,GADAU,EAAIM,iBAfkB,SAAC,GAAD,IAAGlB,EAAH,EAAGA,KAAH,OACtBM,EAASa,MAAK,SAAAC,GAAE,OAAIA,EAAGpB,KAAKqB,gBAAkBrB,EAAKqB,aAAnC,GADM,CAgBlBC,CAAgBL,GAGlB,OAFAM,IAAAA,OAAAA,QAAA,UAA2BN,EAAQjB,KAAnC,iCACAe,IAGFX,GAASoB,EAAAA,EAAAA,IAAWP,IACpBF,GACD,EAQC,WACE,UAACpB,EAAD,YACE,SAACD,EAAD,oBACA,SAACE,EAAD,CACE6B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,KAAK,OACL5B,KAAK,OACLc,MAAOd,EACP6B,SAAUlB,QAId,UAAChB,EAAD,YACE,SAACD,EAAD,sBACA,SAACE,EAAD,CACE6B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,KAAK,MACL5B,KAAK,QACLc,MAAOZ,EACP2B,SAAUlB,QAGd,SAACd,EAAD,CAAY+B,KAAK,SAAjB,2BAGL,C,2FCzEc,SAASE,IACtB,OACE,4BACE,wCACA,SAAC,IAAD,MAGL,C,wGCVM,IAAMC,EAAe,SAAAC,GAAK,OAAIA,EAAMC,OAAOA,MAAjB,EAEpBzB,EAAiB,SAAAwB,GAAK,OAAIA,EAAM1B,SAAS4B,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAM1B,SAAS8B,SAAnB,C","sources":["components/Form/FormStyled.jsx","components/Form/Form.jsx","pages/Login.jsx","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n`;\n\nexport const Text = styled.p`\n  font-size: 22px;\n  margin-right: 14px;\n  font-weight: 500;\n`;\n\nexport const Label = styled.label`\n  width: 200px;\n`;\n\nexport const Input = styled.input`\n  width: 80%;\n`;\n\nexport const ButtonForm = styled.button`\n  width: 120px;\n  height: 34px;\n  color: #fff;\n  border-radius: 5px;\n  padding: 8px 14px;\n  font-family: 'Lato', sans-serif;\n  font-weight: 500;\n  background: rgb(105, 105, 111);\n  background: linear-gradient(0deg, #595961 0%, #4d4d4f 100%);\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n\n  :hover {\n    background: rgb(0, 3, 255);\n    background: linear-gradient(0deg, #3e3e3f 0%, #212122 100%);\n  }\n`;\n\n","import { useState } from 'react';\nimport { ButtonForm } from './FormStyled';\nimport { FormStyled, Text, Label, Input } from './FormStyled';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport function Form() {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  console.log(contacts);\n\n  const hasAlreadyAdded = ({ name }) =>\n    contacts.find(el => el.name.toLowerCase() === name.toLowerCase());\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'phone') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    const contact = { name, phone };\n    evt.preventDefault();\n    if (hasAlreadyAdded(contact)) {\n      Notiflix.Notify.warning(`${contact.name} is already in contacts`);\n      reset();\n      return;\n    }\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <Label>\n        <Text>Name</Text>\n        <Input\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label>\n        <Text>Number</Text>\n        <Input\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={handleChange}\n        />\n      </Label>\n      <ButtonForm type=\"submit\">Add contact</ButtonForm>\n    </FormStyled>\n  );\n}\n","import { Form } from \"components/Form/Form\";\n\n\nexport default function Login() {\n  return (\n    <div>\n      <h1>Login page</h1>\n      <Form />\n    </div>\n  );\n}","export const selectFilter = state => state.filter.filter;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n\n\n"],"names":["FormStyled","styled","Text","Label","Input","ButtonForm","Form","useState","name","setName","phone","setNumber","dispatch","useDispatch","contacts","useSelector","selectContacts","console","log","handleChange","evt","target","value","reset","onSubmit","contact","preventDefault","find","el","toLowerCase","hasAlreadyAdded","Notiflix","addContact","pattern","title","required","type","onChange","Login","selectFilter","state","filter","items","selectIsLoading","isLoading"],"sourceRoot":""}