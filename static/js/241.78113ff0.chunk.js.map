{"version":3,"file":"static/js/241.78113ff0.chunk.js","mappings":"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","sources":["components/Form/FormStyled.jsx","redux/contacts/selectors.js","components/Form/Form.jsx","components/Filter/FilterStyled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","pages/Home/HomeStyled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  max-width: 400px;\n  padding: 60px 50px;\n  margin: 50px auto 0;\n  background-color: #565678;\n  border-radius: 20px;\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      to right bottom,\n      rgba(43, 44, 78, 0.5),\n      rgba(104, 22, 96, 0.5)\n    );\n    border-radius: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 22px;\n  margin-right: 14px;\n  font-weight: 500;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  padding-left: 15px;\n  font-family: 'Roboto', sans-serif;\n  color: rgba(255, 255, 255, 0.6);\n  text-transform: uppercase;\n  font-size: 14px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  padding: 0 15px;\n  margin: 10px 0 15px;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  color: white;\n  background: rgba(255, 255, 255, 0.2);\n  font-family: 'Roboto', sans-serif;\n\n  :focus {\n    border: none;\n    outline: 2px solid #b758b7;\n  }\n`;\n\nexport const ButtonForm = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  padding: 15px 30px;\n  border: #565678;\n  margin: 0 auto;\n  border-radius: 10px;\n  box-shadow: 0 0 40px 40px #565678 inset, 0 0 0 0 #565678;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: bold;\n  letter-spacing: 2px;\n  color: white;\n  transition: 0.15s ease-in-out;\n  :hover {\n    box-shadow: 0 0 10px 0 #565678 inset, 0 0 10px 4px #565678;\n    color: #565678;\n  }\n  :focus {\n    box-shadow: 0 0 10px 0 #565678 inset, 0 0 10px 4px #565678;\n    color: #565678;\n  }\n  &.active {\n    box-shadow: 0 0 10px 0 #565678 inset, 0 0 10px 4px #565678;\n    color: #565678;\n  }\n`;\n\n","export const selectFilter = state => state.filter.filter;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n\n\n","import { useState } from 'react';\nimport { ButtonForm } from './FormStyled';\nimport { FormStyled, Text, Label, Input } from './FormStyled';\nimport { FormInner } from 'components/RegisterForm/RegisterFormStyled';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport function Form() {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const hasAlreadyAdded = ({ name }) =>\n    contacts.find(el => el.name.toLowerCase() === name.toLowerCase());\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'phone') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    const contact = { name, phone };\n    evt.preventDefault();\n    if (hasAlreadyAdded(contact)) {\n      Notiflix.Notify.warning(`${contact.name} is already in contacts`);\n      reset();\n      return;\n    }\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <FormInner>\n        <Label>\n          <Text>Name</Text>\n          <Input\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Label>\n          <Text>Number</Text>\n          <Input\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            type=\"tel\"\n            name=\"phone\"\n            value={phone}\n            onChange={handleChange}\n          />\n        </Label>\n        <ButtonForm type=\"submit\">Add contact</ButtonForm>\n      </FormInner>\n    </FormStyled>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const LabelFilter = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 15px;\n  font-family: 'Roboto', sans-serif;\n  color: #565678;\n  text-transform: uppercase;\n  font-size: 24px;\n`;\n\nexport const InputFilter = styled.input`\n  display: block;\n  width: 50%;\n  padding: 0 15px;\n  margin: 10px 0 15px;\n  line-height: 40px;\n  border-radius: 20px;\n  border: 3px solid #565678;\n  outline: none;\n  font-family: 'Roboto', sans-serif;\n\n  :focus {\n    border: none;\n    outline: 3px solid #b758b7;\n  }\n`;\n\nexport const Wrapper = styled.div`\ntext-align: center;\n    display: block;\n    justify-content: center;\n    margin-top: 50px;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, List, ListItem, LabelText } from './ContactsListStyled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport function ContactList({ contacts }) {\n  const dispatch = useDispatch();\n  const item = contacts.map(({ name, phone, id }) => {\n    return (\n      <ListItem key={id}>\n        <LabelText>Name: {name}</LabelText>{' '}\n        <LabelText>Number: {phone}</LabelText>\n        <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          Delete\n        </Button>\n      </ListItem>\n    );\n  });\n  return <List>{item}</List>;\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import { LabelFilter, InputFilter, Wrapper } from './FilterStyled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsFilter } from 'redux/contacts/filterSlice';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectFilter,\n} from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { TitleHome } from 'pages/Home/HomeStyled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(contactsFilter(value));\n  };\n\n    const getFilteredContacts = () => {\n      if (!filter) {\n        return contacts;\n      }\n      const normalizedFilter = filter.toLowerCase();\n\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n      );\n    };\n    const filteredContacts = getFilteredContacts(filter, contacts);\n  \n  return (\n    <Wrapper>\n      <LabelFilter>\n        Find contacts by name\n        <InputFilter type=\"text\" value={filter} onChange={handleChange} />\n      </LabelFilter>\n      {contacts.length > 0 && <Filter />}\n      {contacts.length === 0 && !isLoading && (\n        <TitleHome>Додайте свій перший контакт до записної книжки</TitleHome>\n      )}\n      {contacts && <ContactList contacts={filteredContacts} />}\n    </Wrapper>\n  );\n};\n","import { Form } from \"components/Form/Form\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { useEffect } from \"react\";\nimport { TitleHome } from \"./Home/HomeStyled\";\n\n\nexport default function Contacts () {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <TitleHome>Phonebook</TitleHome>\n      <Form />\n      <Filter />\n    </div>\n  );\n};","import styled from \"styled-components\";\n\nexport const TitleHome = styled.nav`\n  position: relative;\n  padding-bottom: 0.5rem;\n  margin-top: 50px;\n  font-size: 1.5rem;\n  text-transform: uppercase;\n  text-align: center;\n  color: #565678;\n\n  ::before {\n    content: '';\n    position: absolute;\n    border-bottom: 2px solid #565678;\n    bottom: 0.25rem;\n    left: 50%;\n    width: 30%;\n    transform: translateX(-50%);\n  }\n  ::after {\n    content: '';\n    position: absolute;\n    border-bottom: 2px solid #565678;\n    bottom: 0;\n    left: 50%;\n    width: 15%;\n    transform: translateX(-50%);\n  }\n`;"],"names":["FormStyled","styled","Text","Label","Input","ButtonForm","selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","Form","useState","name","setName","phone","setNumber","dispatch","useDispatch","useSelector","handleChange","evt","target","value","reset","onSubmit","contact","preventDefault","find","el","toLowerCase","hasAlreadyAdded","Notiflix","addContact","pattern","title","required","type","onChange","LabelFilter","InputFilter","Wrapper","ContactList","item","map","id","onClick","deleteContact","Filter","filteredContacts","normalizedFilter","includes","getFilteredContacts","e","contactsFilter","length","Contacts","useEffect","fetchContacts","TitleHome"],"sourceRoot":""}