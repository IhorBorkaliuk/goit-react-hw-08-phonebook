{"version":3,"file":"static/js/241.a7b21e05.chunk.js","mappings":"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","sources":["components/Form/FormStyled.jsx","redux/contacts/selectors.js","components/Form/Form.jsx","components/Filter/FilterStyled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n`;\n\nexport const Text = styled.p`\n  font-size: 22px;\n  margin-right: 14px;\n  font-weight: 500;\n`;\n\nexport const Label = styled.label`\n  width: 200px;\n`;\n\nexport const Input = styled.input`\n  width: 80%;\n`;\n\nexport const ButtonForm = styled.button`\n  width: 120px;\n  height: 34px;\n  color: #fff;\n  border-radius: 5px;\n  padding: 8px 14px;\n  font-family: 'Lato', sans-serif;\n  font-weight: 500;\n  background: rgb(105, 105, 111);\n  background: linear-gradient(0deg, #595961 0%, #4d4d4f 100%);\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n\n  :hover {\n    background: rgb(0, 3, 255);\n    background: linear-gradient(0deg, #3e3e3f 0%, #212122 100%);\n  }\n`;\n\n","export const selectFilter = state => state.filter.filter;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n\n\n","import { useState } from 'react';\nimport { ButtonForm } from './FormStyled';\nimport { FormStyled, Text, Label, Input } from './FormStyled';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport function Form() {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const hasAlreadyAdded = ({ name }) =>\n    contacts.find(el => el.name.toLowerCase() === name.toLowerCase());\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'phone') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    const contact = { name, phone };\n    evt.preventDefault();\n    if (hasAlreadyAdded(contact)) {\n      Notiflix.Notify.warning(`${contact.name} is already in contacts`);\n      reset();\n      return;\n    }\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <Label>\n        <Text>Name</Text>\n        <Input\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label>\n        <Text>Number</Text>\n        <Input\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={handleChange}\n        />\n      </Label>\n      <ButtonForm type=\"submit\">Add contact</ButtonForm>\n    </FormStyled>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const LabelFilter = styled.label`\nfont-size: 20px;\nfont-weight: 500;\nwidth: 70%;\npadding: 0;\n`\n\nexport const InputFilter = styled.input`\n  width: 15%;\n  margin-left: 25px;\n`;\n\nexport const Wrapper = styled.div`\ntext-align: center;\n    display: block;\n    justify-content: center;\n    margin-top: 50px;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, List, ListItem, LabelText } from './ContactsListStyled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport function ContactList({ contacts }) {\n  const dispatch = useDispatch();\n  const item = contacts.map(({ name, phone, id }) => {\n    return (\n      <ListItem key={id}>\n        <LabelText>Name: {name}</LabelText>{' '}\n        <LabelText>Number: {phone}</LabelText>\n        <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          Delete\n        </Button>\n      </ListItem>\n    );\n  });\n  return <List>{item}</List>;\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import { LabelFilter, InputFilter, Wrapper } from './FilterStyled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsFilter } from 'redux/contacts/filterSlice';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectFilter,\n} from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { Title } from 'components/ContactsList/ContactsListStyled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(contactsFilter(value));\n  };\n\n    const getFilteredContacts = () => {\n      if (!filter) {\n        return contacts;\n      }\n      const normalizedFilter = filter.toLowerCase();\n\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n      );\n    };\n    const filteredContacts = getFilteredContacts(filter, contacts);\n  \n  return (\n    <Wrapper>\n      <LabelFilter>\n        Find contacts by name\n        <InputFilter type=\"text\" value={filter} onChange={handleChange} />\n      </LabelFilter>\n      {contacts.length > 0 && <Filter />}\n      {contacts.length === 0 && !isLoading && (\n        <Title>Додайте свій перший контакт до записної книжки</Title>\n      )}\n      {contacts && <ContactList contacts={filteredContacts} />}\n    </Wrapper>\n  );\n};\n","import { Form } from \"components/Form/Form\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { useEffect } from \"react\";\n\n\nexport default function Contacts () {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Form />\n      <Filter />\n    </div>\n  );\n};"],"names":["FormStyled","styled","Text","Label","Input","ButtonForm","selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","Form","useState","name","setName","phone","setNumber","dispatch","useDispatch","useSelector","handleChange","evt","target","value","reset","onSubmit","contact","preventDefault","find","el","toLowerCase","hasAlreadyAdded","Notiflix","addContact","pattern","title","required","type","onChange","LabelFilter","InputFilter","Wrapper","ContactList","item","map","id","onClick","deleteContact","Filter","filteredContacts","normalizedFilter","includes","getFilteredContacts","e","contactsFilter","length","Contacts","useEffect","fetchContacts"],"sourceRoot":""}